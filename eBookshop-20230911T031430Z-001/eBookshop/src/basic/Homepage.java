/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package basic;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.sql.* ;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
/**
 *
 * @author user
 */
public class Homepage extends javax.swing.JFrame {

    /**
     * Creates new form Homepage
     */
    String uname = "" ;
    public Homepage() {
        initComponents();
        jButton3.setEnabled(false);
        jScrollPane1.getViewport().setOpaque(false);
        ((DefaultTableCellRenderer)jTable1.getDefaultRenderer(Object.class)).setOpaque(false);
        jTable1.setShowGrid(false);
        JTableHeader tb = jTable1.getTableHeader() ;
        tb.setBackground(new java.awt.Color(0,0,0,0));
        tb.setOpaque(false);
        jScrollPane1.setPreferredSize(new Dimension(700, 450));
        Tabledata();
    }
    
    public Homepage(String sm) {
        uname = sm ;
        initComponents();
        jScrollPane1.getViewport().setOpaque(false);
        ((DefaultTableCellRenderer)jTable1.getDefaultRenderer(Object.class)).setOpaque(false);
        jTable1.setShowGrid(false);
        JTableHeader tb = jTable1.getTableHeader() ;
        tb.setBackground(new java.awt.Color(0,0,0,0));
        tb.setOpaque(false);
        jScrollPane1.setPreferredSize(new Dimension(700, 450));
        Tabledata();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel(){
            protected void paintComponent(Graphics g)
            {
                g.setColor( getBackground() );
                g.fillRect(0, 0, getWidth(), getHeight());
                super.paintComponent(g);
            }
        };
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){
            protected void paintComponent(Graphics g)
            {
                g.setColor( getBackground() );
                g.fillRect(0, 0, getWidth(), getHeight());
                super.paintComponent(g);
            }
        };
        jToolBar1 = new javax.swing.JToolBar();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1110, 780));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 217, 207));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(255,255,255,90)
        );
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Bookname");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 226, 45));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setToolTipText("Upload a 150x150 jpg picture");
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 143, 201));

        jButton7.setBackground(new java.awt.Color(204, 0, 102));
        jButton7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Logout");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 587, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-close-window-25.png"))); // NOI18N
        jLabel11.setText("jLabel2");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 25, -1));

        jTextField2.setBorder(new javax.swing.border.MatteBorder(null));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 250, 30));

        jTextField3.setBorder(new javax.swing.border.MatteBorder(null));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 250, 30));

        jTextField4.setBorder(new javax.swing.border.MatteBorder(null));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 250, 30));

        jTextField5.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 250, 30));

        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });
        jSpinner1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSpinner1MouseClicked(evt);
            }
        });
        jSpinner1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jSpinner1KeyPressed(evt);
            }
        });
        jPanel1.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 450, 101, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Quantity");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 450, -1, -1));

        jButton2.setText("Add to Cart");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 490, 91, -1));

        jButton3.setText("Go to Cart");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 490, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 0, 530));

        jScrollPane1.setBackground(new java.awt.Color(0,0,0,0));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));
        jScrollPane1.setOpaque(false);

        jTable1.setBackground(new java.awt.Color(0,0,0,0));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));
        jTable1.setFont(new java.awt.Font("Cambria Math", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Name", "Author", "Publication", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.setOpaque(false);
        jTable1.setRowHeight(60);
        jTable1.setRowMargin(1);
        jTable1.setSelectionForeground(new java.awt.Color(255, 0, 153));
        jTable1.setShowGrid(false);
        jTable1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTable1ComponentAdded(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(3).setMinWidth(75);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(75);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(75);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 780, 660));

        jToolBar1.setRollover(true);
        getContentPane().add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 0, 0));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Novel", "Poem", "Story", "Educational", "Religious", "Motivational", "Biopic" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 90, 100, 30));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Price", "300-500", "500-1000", "Above 1000" }));
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 130, -1, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/rsz_pexels-jess-bailey-designs-1018136.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1080, 650));

        jPanel6.setBackground(new java.awt.Color(204, 0, 102));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Georgia", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Tales of Time");

        jTextField1.setText("Enter Book Name");
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("X");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(277, 277, 277)
                .addComponent(jButton4)
                .addGap(68, 68, 68))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // TODO add your handling code here:
        jTextField1.setText("");
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String bn = jTextField1.getText();
        QueryData(bn);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String tag = jComboBox1.getSelectedItem().toString();
        if(tag.equals("All"))
            Tabledata();
        else
            FilterData(tag);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String name = jTextField2.getText();
        //String bid = jTextField6.getText();
        String qty = jTextField5.getText();
        InsertToCart(name, qty);
        String show = name+" is added to cart" ;
        JOptionPane.showMessageDialog(this,show,"Success",JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jSpinner1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSpinner1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinner1MouseClicked

    private void jSpinner1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSpinner1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinner1KeyPressed
    int prev=1;
    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        // TODO add your handling code here:
        String bookname = jTextField2.getText();
        int v = (Integer)jSpinner1.getValue();
        int op = QueryPrice(bookname) ;
        int str=op*v;
        String ss = String.valueOf(str);
        jTextField5.setText(ss);
        String emp = "" ;
        if(v>0 && !uname.equals(emp)) {
            jButton2.setEnabled(true);
        }
        else {
            jButton2.setEnabled(false);
        }
            
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new gocart(uname).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();

        //String b_id = tblModel.getValueAt(jTable1.getSelectedRow(), 0).toString() ;
        String Name = tblModel.getValueAt(jTable1.getSelectedRow(), 0).toString();
        String Author = tblModel.getValueAt(jTable1.getSelectedRow(), 1).toString();
        String Pub = tblModel.getValueAt(jTable1.getSelectedRow(), 2).toString();
        String Price = tblModel.getValueAt(jTable1.getSelectedRow(), 3).toString();

        //jTextField6.setText(b_id);
        jTextField2.setText(Name);
        jTextField3.setText(Author);
        jTextField4.setText(Pub);
        jTextField5.setText(Price);
        jSpinner1.setValue(1);
        try {
            FindPic(Name);
        } catch (IOException ex) {
            Logger.getLogger(Homepage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(x==0) {
            jPanel1.setSize(0, 530);
            Thread th = new Thread() {
                @Override
                public void run() {
                    try {
                        for(int i=0; i<=300; i++) {
                            Thread.sleep(1);
                            jPanel1.setSize(i, 530);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            };th.start();
            x = 300 ;
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable1ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1ComponentAdded

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed
    
    int x = 0 ;
    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        if(x==300) {
            jPanel1.setSize(300, 530);
            Thread th = new Thread() {
                @Override
                public void run() {
                    try {
                        for(int i=300; i>=0; i--) {
                            Thread.sleep(1);
                            jPanel1.setSize(i, 530);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            };th.start();
            x = 0 ;
        }
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Homepage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
    
    private void Tabledata() {
        Connection dbcon = DBconnection.connectDB();
        if(dbcon!=null) {
        try{
        PreparedStatement st = (PreparedStatement) 
                dbcon.prepareStatement("Select * from books");
        
        ResultSet res = st.executeQuery();
        
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
            
        while(tblModel.getRowCount()>0)
            tblModel.removeRow(0);
        
        while(res.next()) {
            String book_id = String.valueOf(res.getInt("b_id"));
            String bookname = res.getString("bookname");
            String writer = res.getString("writer");
            String publisher = res.getString("publisher");
            String price = String.valueOf(res.getInt("price"));
            
            String tbdata[] = {bookname, writer, publisher, price} ;
            tblModel.addRow(tbdata);
        }
        } catch(SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,ex);
        }
        }else {
            System.out.println("The connection not available");
        }
    }
    
    private void FindPic(String bn) throws IOException {
        Connection dbcon = DBconnection.connectDB();
        if(dbcon!=null) {
        try{
        PreparedStatement st = (PreparedStatement) 
                dbcon.prepareStatement("Select * from books where bookname=?");
        st.setString(1, bn);
        ResultSet res = st.executeQuery();
    
        while(res.next()) {
            if(res.getBinaryStream("Image")==null)
                jLabel10.setText("Image not found");
            else  {
                BufferedImage im = ImageIO.read(res.getBinaryStream("Image"));
                jLabel10.setIcon(new ImageIcon(im));
            }
        }
        } catch(SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,ex);
        }
        }else {
            System.out.println("The connection not available");
        }
    }
    
    private void QueryData(String bn) {
        Connection dbcon = DBconnection.connectDB();
        if(dbcon!=null) {
        try{
        PreparedStatement st = (PreparedStatement) 
                dbcon.prepareStatement("Select * from books");
        
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
            
            while(tblModel.getRowCount()>0)
                tblModel.removeRow(0);
        
        ResultSet res = st.executeQuery();
        while(res.next()) {
            String book_id = String.valueOf(res.getInt("b_id"));
            String bookname = res.getString("bookname");
            String writer = res.getString("writer");
            String publisher = res.getString("publisher");
            String price = String.valueOf(res.getInt("price"));
            
            String tbdata[] = {bookname, writer, publisher, price} ;
            
            
            if(bookname.equals(bn)) {
                tblModel.addRow(tbdata);
            }
        }
        } catch(SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,ex);
        }
        }else {
            System.out.println("The connection not available");
        }
    }
    
    private void FilterData(String T) {
        Connection dbcon = DBconnection.connectDB();
        if(dbcon!=null) {
        try{
        PreparedStatement st = (PreparedStatement) 
                dbcon.prepareStatement("Select * from books where tag=?");
        st.setString(1,T);
        
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
            
            while(tblModel.getRowCount()>0)
                tblModel.removeRow(0);
        
        ResultSet res = st.executeQuery();
        while(res.next()) {
            String book_id = String.valueOf(res.getInt("b_id"));
            String bookname = res.getString("bookname");
            String writer = res.getString("writer");
            String publisher = res.getString("publisher");
            String price = String.valueOf(res.getInt("price"));
            String tag = res.getString("tag");
            
            String tbdata[] = {bookname, writer, publisher, price} ;
                tblModel.addRow(tbdata);
            
        }
        } catch(SQLException ex) {
         Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,ex);
        }
        }else {
            System.out.println("The connection not available");
        }
    }
    
    private void InsertToCart(String bn, String quantity) {
        Connection dbcon = DBconnection.connectDB();
        String author = jTextField3.getText();
        if(dbcon!=null) {
        int bid = 0 ;
        try {
            PreparedStatement st = (PreparedStatement) 
                dbcon.prepareStatement("select * from books where bookname=? and writer=?");
                st.setString(1,bn);
                st.setString(2,author);
                ResultSet res = st.executeQuery();
                if(res.next()) {
                    bid = res.getInt("b_id") ;
                }
        } catch(SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,ex);
        }
        try{
        PreparedStatement st = (PreparedStatement) 
                dbcon.prepareStatement("INSERT INTO cart (BookID, Quantity, Username) VALUES (?,?,?)");
        
        int q = Integer.valueOf(quantity);
        
        st.setInt(1, bid);
        st.setInt(2, q);
        st.setString(3, uname);
        
        int res = st.executeUpdate();
        } catch(SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,ex);
        }
        }else {
            System.out.println("The connection not available");
        }
    }
    
    private int QueryPrice(String bookid) {
        int pr = 1 ;
        Connection dbcon = DBconnection.connectDB();
        if(dbcon!=null) {
        try{
        PreparedStatement st = (PreparedStatement) 
                dbcon.prepareStatement("Select * from books where bookname = ?");
        st.setString(1, bookid);
        
        ResultSet res = st.executeQuery();
        if(res.next()) {
            //String book_id = String.valueOf(res.getInt("b_id"));
            String price = String.valueOf(res.getInt("price"));
            
                pr = Integer.valueOf(price);
        }
        } catch(SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE,null,ex);
        }
        }else {
            System.out.println("The connection not available");
        }
        return pr ;
    }
}
